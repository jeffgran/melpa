#!/bin/bash -e

export HOME=/home/melpa
source "$HOME/melpa/scripts/env"

## git pull
cd "${MELPA_HOME}"
git fetch origin
git reset --hard "origin/${MELPA_BRANCH}"
git pull origin "${MELPA_BRANCH}"
echo

BUILD_STATUS_JSON=$HOME/www/build-status.json
BUILD_LAST_DURATION_FILE=$HOME/www/.last-build-duration

if [ -f "$BUILD_LAST_DURATION_FILE" ]; then
    BUILD_DURATION=$(cat "$BUILD_LAST_DURATION_FILE")
fi

update_json() {
    cat <<EOF > $BUILD_STATUS_JSON
{
  "started": $BUILD_STARTED,
  "completed": ${BUILD_COMPLETED-null},
  "next": ${BUILD_NEXT-null},
  "duration": ${BUILD_DURATION-null}
}
EOF
    echo "Writing $BUILD_STATUS_JSON"
    cat "$BUILD_STATUS_JSON"
}

# Amount of time to sleep between rebuilds
BUILD_DELAY=$((60 * 60))

BUILD_STARTED=$(date "+%s")
update_json

# Build all the packages.
scripts/parallel_build_all

# Store completed date
BUILD_COMPLETED=$(date "+%s")
BUILD_DURATION=$((BUILD_COMPLETED - BUILD_STARTED))
echo -n "$BUILD_DURATION" > $BUILD_LAST_DURATION_FILE
BUILD_NEXT=$((BUILD_COMPLETED + BUILD_DELAY))
update_json

# Sleep for a while before rebuilding.
sleep $BUILD_DELAY
